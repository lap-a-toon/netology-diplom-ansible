---
- name: WEB and ELASTIC (...and KIBANA) add YANDEX MIRROR repository
  hosts: web,elastic-hosts,kibana-hosts
  become: true
  tasks:
    - name: Add source repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [trusted=yes] https://mirror.yandex.ru/mirrors/elastic/8/ stable main"
        state: present
- name: ALL SERVERS - apt-get update
  hosts: all
  become: true
  tasks:
    - name: Run the equivalent of "apt-get update" as a separate step
      ansible.builtin.apt:
        update_cache: yes
- name: WEB prepare servers
  hosts: web
  become: true
  tasks:
    - name: Install a list of packages
      ansible.builtin.apt:
        pkg:
        - nginx
        - git
        - filebeat
    - name: clear native nginx html_orig
      command: rm -rf /var/www/html_orig
    - name: clear native nginx www folder
      command: mv /var/www/html /var/www/html_orig
    - name: Download site from repo
      git:
        repo: https://github.com/lap-a-toon/Rasschet-kartochek-dlya-tuniketa-SATURN-TEC.git
        dest: /var/www/html
        update: yes

- name: WEB install Nginx Log Exporter
  hosts: web
  become: true
  tasks:
    - name: Install Nginx Log Exporter
      ansible.builtin.apt:
        deb: https://github.com/martin-helmich/prometheus-nginxlog-exporter/releases/download/v1.9.2/prometheus-nginxlog-exporter_1.9.2_linux_amd64.deb
        state: present
    - name: Edit service prometheus-nginxlog-exporter
      template:
        src: etc/prometheus-nginxlog-exporter.hcl.j2
        dest: /etc/prometheus-nginxlog-exporter.hcl
    - name: chmod nginx access log to 664
      file:
        path: /var/log/nginx/access.log
        mode: 0644
    - name: chmod nginx error log to 664
      file:
        path: /var/log/nginx/error.log
        mode: 0644
    - name: Start service Nginx Log Exporter
      ansible.builtin.service:
        name: prometheus-nginxlog-exporter.service
        state: restarted
- name: Prometheus Installing
  hosts: prometheus
  become: true
  tasks:
    - name: copy install script prometheus
      template:
        src: install_prometheus.sh.j2
        dest: install_prometheus.sh
    - name: run install script prometheus
      command: bash ./install_prometheus.sh
    - name: config prometheus
      template:
        src: etc/prometheus/prometheus.j2
        dest: /etc/prometheus/prometheus.yml
    - name: create service prometheus
      template:
        src: etc/systemd/system/prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
    - name: Start service prometheus, in all cases
      ansible.builtin.service:
        name: prometheus.service
        state: restarted
- name: node-exporter install
  hosts: node-exporter
  become: true
  tasks:
    - name: copy install script node-exporter
      template:
        src: install_node-exporter.sh.j2
        dest: install_node-exporter.sh
    - name: run install script node-exporter
      command: bash ./install_node-exporter.sh
    - name: create service node-exporter
      template:
        src: etc/systemd/system/node-exporter.service.j2
        dest: /etc/systemd/system/node-exporter.service
    - name: Enable service node-exporter, in all cases
      ansible.builtin.service:
        name: node-exporter.service
        enabled: true
        state: restarted
- name: Grafana installing
  hosts: grafana-hosts
  become: true
  tasks:
    - name: Install Grafana
      ansible.builtin.apt:
        deb: https://dl.grafana.com/oss/release/grafana_7.0.3_amd64.deb
        state: present
    - name: Enable service Grafana
      ansible.builtin.service:
        name: grafana-server
        enabled: true
        state: started
    - name: Check if Grafana is accessible
      uri:
        url: 'http://localhost:3000'
        return_content: yes
        validate_certs: no
        status_code:
          - 200
      until: uri_output.status == 200
      retries: 24 # Retries for 24 * 5 seconds = 120 seconds = 2 minutes
      delay: 5 # Every 5 seconds
      register: uri_output
    - name: drop prometheus datasource
      community.grafana.grafana_datasource:
        name: prometheus
        state: absent
        overwrite: yes
        url: http://localhost:3000
        url_username: "admin"
        url_password: "admin"
        ds_type: prometheus
        ds_url: http://prometheus:9090
        access: proxy
    - name: create prometheus datasource
      community.grafana.grafana_datasource:
        name: prometheus
        state: present
        url: http://localhost:3000
        url_username: "admin"
        url_password: "admin"
        ds_type: prometheus
        ds_url: http://prometheus:9090
        access: proxy
    - name: Import Grafana dashboard
      community.grafana.grafana_dashboard:
        url: http://localhost:3000
        url_username: "admin"
        url_password: "admin"
        folder: General
        dashboard_id: 15489
        #path: https://grafana.com/api/dashboards/15489/revisions/2/download
- name: ElasticSearch installing
  hosts: elastic-hosts
  become: true
  tasks:
    - name: Обманываем Эластик и "накидываем" оперативки
      command: sysctl -w vm.max_map_count=262144
    - name: ElasticSearch Install a list of packages
      ansible.builtin.apt:
        pkg:
        # - docker
        # - docker.io
        # - pip
        - elasticsearch
    - name: Enable and Start ElasticSearch
      ansible.builtin.service:
        name: elasticsearch
        enabled: true
        state: started
        register: result
        ignore_errors: yes
    - name: Show result of task
      debug:
        var: result
    # - name: Install pip docker
    #   ansible.builtin.pip:
    #     name: docker
    # - name: Start a container
    #   community.docker.docker_container:
    #     # docker sebp/elk
    #     name: elastic-container
    #     image: sebp/elk
    #     state: started
    #     restart: true
    #     #devices:
    #     #- "/dev/sda:/dev/xvda:rwm"
    #     ports:
    #     - "5601:5601"
    #     - "9200:9200"
    #     - "9300:9300"
    #     - "5044:5044"
- name: KIBANA
  hosts: kibana-hosts
  become: true
  tasks:
    - name: KIBANA install
      ansible.builtin.apt:
        pkg:
        - kibana
- name: WEB run filebeat
  hosts: web
  become: true
  tasks:
    - name: cmd for activate filebeat-nginx
      command: filebeat modules enable system nginx
    - name: Edit service filebeat
      template:
        src: etc/filebeat/filebeat.yml.j2
        dest: /etc/filebeat/filebeat.yml
    - name: Edit service filebeat/nginx
      template:
        src: etc/filebeat/modules.d/nginx.yml.j2
        dest: /etc/filebeat/modules.d/nginx.yml
    - name: Start service filebeat
      ansible.builtin.service:
        name: filebeat.service
        state: restarted