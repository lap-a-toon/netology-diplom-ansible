---
- hosts: all
  gather_facts: false
  serial: 10
  tasks:
    - name: Wait 300 seconds, but only start checking after 60 seconds
      ansible.builtin.wait_for_connection:
        delay: 60
        timeout: 300
- name: WEB and ELASTIC (...and KIBANA) add YANDEX MIRROR repository
  hosts: web,elastic-hosts,kibana-hosts
  become: true
  tasks:
    - name: Wait 120 seconds, but only start checking after 5 seconds
      ansible.builtin.wait_for_connection:
        delay: 5
        timeout: 120
    - name: Add source repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [trusted=yes] https://mirror.yandex.ru/mirrors/elastic/8/ stable main"
        state: present
- name: ALL SERVERS - apt-get update
  hosts: all
  become: true
  tasks:
    - name: Run the equivalent of "apt-get update" as a separate step
      ansible.builtin.apt:
        update_cache: yes
- name: WEB prepare servers
  hosts: web
  become: true
  tasks:
    - name: Install a list of packages
      ansible.builtin.apt:
        pkg:
        - nginx
        - git
        - filebeat
    - name: clear native nginx html_orig
      command: rm -rf /var/www/html_orig
    - name: clear native nginx www folder
      command: mv /var/www/html /var/www/html_orig
    - name: Download site from repo
      git:
        repo: https://github.com/lap-a-toon/Rasschet-kartochek-dlya-tuniketa-SATURN-TEC.git
        dest: /var/www/html
        update: yes

- name: WEB install Nginx Log Exporter
  hosts: web
  become: true
  tasks:
    - name: Install Nginx Log Exporter
      ansible.builtin.apt:
        deb: https://github.com/martin-helmich/prometheus-nginxlog-exporter/releases/download/v1.9.2/prometheus-nginxlog-exporter_1.9.2_linux_amd64.deb
        state: present
    - name: Edit service prometheus-nginxlog-exporter
      template:
        src: etc/prometheus-nginxlog-exporter.hcl.j2
        dest: /etc/prometheus-nginxlog-exporter.hcl
    - name: chmod nginx access log to 664
      file:
        path: /var/log/nginx/access.log
        mode: 0644
    - name: chmod nginx error log to 664
      file:
        path: /var/log/nginx/error.log
        mode: 0644
    - name: Start service Nginx Log Exporter
      ansible.builtin.service:
        name: prometheus-nginxlog-exporter.service
        state: restarted
- name: Prometheus Installing
  hosts: prometheus
  become: true
  tasks:
    - name: copy install script prometheus
      template:
        src: install_prometheus.sh.j2
        dest: install_prometheus.sh
    - name: run install script prometheus
      command: bash ./install_prometheus.sh
    - name: config prometheus
      template:
        src: etc/prometheus/prometheus.j2
        dest: /etc/prometheus/prometheus.yml
    - name: create service prometheus
      template:
        src: etc/systemd/system/prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
    - name: Start service prometheus, in all cases
      ansible.builtin.service:
        name: prometheus.service
        state: restarted
- name: node-exporter install
  hosts: node-exporter
  become: true
  tasks:
    - name: copy install script node-exporter
      template:
        src: install_node-exporter.sh.j2
        dest: install_node-exporter.sh
    - name: run install script node-exporter
      command: bash ./install_node-exporter.sh
    - name: create service node-exporter
      template:
        src: etc/systemd/system/node-exporter.service.j2
        dest: /etc/systemd/system/node-exporter.service
    - name: Enable service node-exporter, in all cases
      ansible.builtin.service:
        name: node-exporter.service
        enabled: true
        state: restarted
- name: Grafana installing
  hosts: grafana-hosts
  become: true
  tasks:
    - name: Install Grafana
      ansible.builtin.apt:
        deb: https://dl.grafana.com/oss/release/grafana_7.0.3_amd64.deb
        state: present
    - name: Enable service Grafana
      ansible.builtin.service:
        name: grafana-server
        enabled: true
        state: started
    - name: Check if Grafana is accessible
      uri:
        url: 'http://localhost:3000'
        return_content: yes
        validate_certs: no
        status_code:
          - 200
      until: uri_output.status == 200
      retries: 24 # Retries for 24 * 5 seconds = 120 seconds = 2 minutes
      delay: 5 # Every 5 seconds
      register: uri_output
    - name: drop prometheus datasource
      community.grafana.grafana_datasource:
        name: prometheus
        state: absent
        url: http://localhost:3000
        url_username: "admin"
        url_password: "admin"
        ds_type: prometheus
        ds_url: http://prometheus:9090
        access: proxy
    - name: create prometheus datasource
      community.grafana.grafana_datasource:
        name: prometheus
        state: present
        url: http://localhost:3000
        url_username: "admin"
        url_password: "admin"
        ds_type: prometheus
        ds_url: http://prometheus:9090
        access: proxy
    - name: Import Grafana dashboard
      community.grafana.grafana_dashboard:
        url: http://localhost:3000
        url_username: "admin"
        url_password: "admin"
        folder: General
        dashboard_id: 15489
        #path: https://grafana.com/api/dashboards/15489/revisions/2/download
- name: ElasticSearch installing
  hosts: elastic-hosts
  become: true
  tasks:
    - name: Обманываем Эластик и "накидываем" оперативки
      command: sysctl -w vm.max_map_count=262144
    - name: ElasticSearch Install a list of packages
      ansible.builtin.apt:
        pkg:
        - elasticsearch
    - name: check if my user exists
      shell: /usr/share/elasticsearch/bin/elasticsearch-users list | grep -c {{elastic_user}}
      register: has_user
      failed_when: has_user.rc not in [ 0, 1, 2, 3 ]
    - name: create user
      shell: /usr/share/elasticsearch/bin/elasticsearch-users useradd {{elastic_user}} -p {{elastic_password}} -r superuser
      when: has_user.stdout == "0"
    - name: just change password
      shell: /usr/share/elasticsearch/bin/elasticsearch-users passwd {{elastic_user}} -p {{elastic_password}}
      when: has_user.stdout != "0"
    - name: add kibana_system role to user
      shell: /usr/share/elasticsearch/bin/elasticsearch-users roles {{elastic_user}} -a kibana_system
    - name: config service elasticsearch
      template:
        src: etc/elasticsearch/elasticsearch.yml.j2
        dest: /etc/elasticsearch/elasticsearch.yml
        owner: elasticsearch
    - name: Customising Elascticsearch Startup time from 75 to 210 sec - create directory form CustomConf
      file:
        path: /usr/lib/systemd/system/elasticsearch.service.d
        state: directory
    - name: Customising Elascticsearch Startup time from 75 to 210 sec - creating file
      template:
        src: usr/lib/systemd/system/elasticsearch.service.d/startup-timeout.conf.j2
        dest: /usr/lib/systemd/system/elasticsearch.service.d/startup-timeout.conf
    - name: Enable and Start ElasticSearch
      ansible.builtin.systemd:
        daemon_reload: true
        name: elasticsearch
        enabled: true
        state: started
      register: result
      ignore_errors: true
    - name: Show result of task
      debug:
        var: result
- name: KIBANA
  hosts: kibana-hosts
  become: true
  tasks:
    - name: KIBANA install
      ansible.builtin.apt:
        pkg:
        - kibana
    - name: config service elasticsearch
      template:
        src: etc/kibana/kibana.yml.j2
        dest: /etc/kibana/kibana.yml
        owner: kibana
    - name: Enable and Start Kibana
      ansible.builtin.service:
        name: kibana
        enabled: true
        state: started
# Здесь надо перехватить шестизначный код ручной верификации (он выводится в лог или по команде)
- name: WEB run filebeat
  hosts: web
  become: true
  tasks:
    - name: cmd for activate filebeat-nginx
      command: filebeat modules enable system nginx
    - name: Edit service filebeat
      template:
        src: etc/filebeat/filebeat.yml.j2
        dest: /etc/filebeat/filebeat.yml
    - name: Edit service filebeat/nginx
      template:
        src: etc/filebeat/modules.d/nginx.yml.j2
        dest: /etc/filebeat/modules.d/nginx.yml
    - name: Edit service filebeat/nginx
      template:
        src: etc/filebeat/modules.d/system.yml.j2
        dest: /etc/filebeat/modules.d/system.yml
    - name: Start service filebeat
      ansible.builtin.service:
        name: filebeat.service
        state: restarted
    - name: Check if Kibana is accessible
      uri:
        url: 'http://kibana:5601/api/status'
        return_content: no
        validate_certs: no
        user: "{{ elastic_user }}"
        password: "{{ elastic_password }}"
        method: GET
        force_basic_auth: true
        status_code:
          - 200
      until: uri_kibana_output.status == 200
      retries: 48 # Retries for 24 * 5 seconds = 240 seconds = 4 minutes
      delay: 5 # Every 5 seconds
      register: uri_kibana_output
    - name: Enabling filebeat for kibana (with ignore_errors, it's too long process)
      command: filebeat setup
      ignore_errors: true